---
layout: post
title: HTTP vs. HTTPS
date: 2022-05-04 02:01:20 +0900
category: CS
---

# HTTP

> 각종 데이터를 웹상에서 주고 받기 위한 프로토콜

HTTP는 HyperText Transfer Protocol의 약자로, 말 그대로 Hypertext를 웹 상에서 주고 받기 위한 프로토콜이다.

사실 Hypertext 이외에도 파일이나 텍스트 등을 주고받을 수는 있지만, 주로 Hypertext인 HTML을 전송한다.

80번 포트를 이용하며, TCP/UDP 프로토콜을 사용한다. 주요 특징으로는 '비연결'과 '무상태'가 있다.

- 비연결 (Connectionless)
  - HTTP는 실제 요청, 응답시에만 연결을 유지하고 동작이 끝나면 즉시 연결을 종료한다.
  - 실제 사이트에 머무르더라도 요청이 계속 들어오는것은 아니기 때문에 효율적이다.
  - 현재에는 여러 자원을 모두 받고 나서 연결을 끊는 HTTP 지속 연결을 사용한다.
- 무상태 (Stateless)
  - 연결이 종료되면 상태 정보를 유지하지 않는다.
  - 상태를 유지하지 않는다는 것은 확장성이 좋다는 뜻이다.
  - 상태 유지가 필요한 경우 쿠키와 세션 토큰 등을 사용한다.

<br/>

# HTTPS

> HTTP와 보안의 결합

HTTPS는 HTTP Secure을 뜻한다. HTTP의 보안을 위해 개선된 버전이며, 443번 포트를 이용한다.

SSL(Secure Socket Layer) 이라는 계층을 사용하며, 이는 우리가 사용하는 TCP/IP 계층에 추가된다.

사실 SSL은 3.0 버전을 기반으로 TLS(Transport Layer Security) 로 발전됐으며, 실제로 현재 사용하는 표준은 TLS이다.

HTTPS는 SSL/TLS계층 위에서 동작하며, 기존 HTTP에서 SSL/TLS가 추가된 TCP/IP -> SSL/TLS -> HTTPS 순서로 동작한다.

<br/>

# SSL / TLS

> 디지털 인증서와 키(key)를 이용한 보안 프로토콜

통신하는 데이터를 키를 통해 암호화, 복호화시켜 사용하여 민감한 정보를 보호한다.

- 공개키 : 모두에게 공개되며, 공개키 저장소에 등록된다.
- 개인키 : 개인에게만 공개되는 개인키 (클라이언트-서버 구조에서는 서버가 가지고 있다.)
- 동작 순서 : 사용자 데이터를 공개키로 암호화 -> 서버로 전송 -> 서버는 개인키를 통해 복호화

위의 동작 과정중에 디지털 인증서를 사용하는데, 공인된 제 3자가 통신에 대한 보증서(웹사이트 신원 등)를 써 준 것이다.

실제 데이터를 암호화하여 주고받기 전에, handshake 방식으로 전자서명을 활용하여 인증서의 유효성을 확인한다.

보통 이러한 프로토콜을 SSL 인증서와 같은 개념으로 설명하는데, SSL/TLS 프로토콜과 SSL/TLS 인증서는 동일한 개념이 아니다.

엄밀하게는 SSL/TLS 프로토콜과 함께 사용할 디지털 인증서가 따로 존재한다고 생각하면 된다.

아무래도 추가적인 단계가 생긴만큼, 비용 발생 및 속도 저하 등의 문제가 있지만, 보안을 위해 대부분 필수적으로 사용하고 있다.

<br/>

# Summary

HTTP는 주로 HTML 문서를 주고받기 위한 프로토콜이고, HTTPS는 SSL/TLS를 사용하여 보안성을 강화했다.

SSL/TLS는 인증서로 웹사이트의 신원을 보증하고, 통신 데이터를 키를 사용해 암호화하여 민감한 정보를 보호한다.
